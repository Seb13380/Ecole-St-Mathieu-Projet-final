{% extends "layouts/base.twig" %}

{% block main %}
	<div class="min-h-screen bg-gradient-to-br from-blue-50 to-slate-100">
		<div
			class="container mx-auto px-4 py-8">

			<!-- En-tête de page -->
			<div class="bg-white rounded-lg shadow-md p-6 mb-8">
				<div class="flex items-center justify-between">
					<div class="flex items-center">
						<div class="bg-indigo-500 p-3 rounded-lg mr-4">
							<svg class="h-8 w-8 text-white" fill="none" viewbox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"/>
							</svg>
						</div>
						<div>
							<h1 class="text-3xl font-bold text-slate-800">Demandes d'Identifiants</h1>
							<p class="text-slate-600">Gestion des demandes de connexion des parents</p>
						</div>
					</div>
					<a href="/directeur/dashboard" class="bg-slate-500 hover:bg-slate-600 text-white px-4 py-2 rounded-lg transition-colors flex items-center">
						<svg class="h-5 w-5 mr-2" fill="none" viewbox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
						</svg>
						Retour au Dashboard
					</a>
				</div>
			</div>

			<!-- Statistiques -->
			<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-4 sm:gap-6 mb-6 sm:mb-8">
				<div class="bg-white rounded-lg shadow-md p-4 sm:p-6 border-l-4 border-slate-500">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="bg-slate-100 p-2 sm:p-3 rounded-lg">
								<svg class="h-6 w-6 sm:h-8 sm:w-8 text-slate-600" fill="none" viewbox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
								</svg>
							</div>
						</div>
						<div class="ml-3 sm:ml-4">
							<p class="text-xs sm:text-sm font-medium text-slate-600">Total</p>
							<p class="text-xl sm:text-2xl font-bold text-slate-900">{{ stats.total }}</p>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow-md p-6 border-l-4 border-yellow-500">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="bg-yellow-100 p-3 rounded-lg">
								<svg class="h-8 w-8 text-yellow-600" fill="none" viewbox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
								</svg>
							</div>
						</div>
						<div class="ml-4">
							<p class="text-sm font-medium text-slate-600">En attente</p>
							<p class="text-2xl font-bold text-yellow-900">{{ stats.pending }}</p>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow-md p-6 border-l-4 border-blue-500">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="bg-blue-100 p-3 rounded-lg">
								<svg class="h-8 w-8 text-blue-600" fill="none" viewbox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/>
								</svg>
							</div>
						</div>
						<div class="ml-4">
							<p class="text-sm font-medium text-slate-600">En traitement</p>
							<p class="text-2xl font-bold text-blue-900">{{ stats.processing }}</p>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow-md p-6 border-l-4 border-green-500">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="bg-green-100 p-3 rounded-lg">
								<svg class="h-8 w-8 text-green-600" fill="none" viewbox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
								</svg>
							</div>
						</div>
						<div class="ml-4">
							<p class="text-sm font-medium text-slate-600">Complétées</p>
							<p class="text-2xl font-bold text-green-900">{{ stats.completed }}</p>
						</div>
					</div>
				</div>

				<div class="bg-white rounded-lg shadow-md p-6 border-l-4 border-red-500">
					<div class="flex items-center">
						<div class="flex-shrink-0">
							<div class="bg-red-100 p-3 rounded-lg">
								<svg class="h-8 w-8 text-red-600" fill="none" viewbox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"/>
								</svg>
							</div>
						</div>
						<div class="ml-4">
							<p class="text-sm font-medium text-slate-600">Rejetées</p>
							<p class="text-2xl font-bold text-red-900">{{ stats.rejected }}</p>
						</div>
					</div>
				</div>
			</div>

			<!-- Liste des demandes -->
			<div class="bg-white rounded-lg shadow-md overflow-hidden">
				<div class="px-6 py-4 border-b border-slate-200">
					<h2 class="text-xl font-bold text-slate-800">Liste des demandes</h2>
				</div>

				{% if credentialsRequests|length > 0 %}
					<div class="overflow-x-auto">
						<table class="min-w-full divide-y divide-slate-200">
							<thead class="bg-slate-50">
								<tr>
									<th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Date</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Demandeur</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Parent trouvé</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Statut</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Actions</th>
								</tr>
							</thead>
							<tbody class="bg-white divide-y divide-slate-200">
								{% for request in credentialsRequests %}
									<tr class="hover:bg-slate-50">
										<td class="px-6 py-4 whitespace-nowrap text-sm text-slate-900">
											{{ request.createdAt|date('d/m/Y H:i') }}
										</td>
										<td class="px-6 py-4 whitespace-nowrap">
											<div>
												<div class="text-sm font-medium text-slate-900">
													{{ request.firstName }}
													{{ request.lastName }}
												</div>
												<div class="text-sm text-slate-500">{{ request.email }}</div>
											</div>
										</td>
										<td class="px-6 py-4 whitespace-nowrap">
											{% if request.foundParent %}
												<div>
													<div class="text-sm font-medium text-slate-900">
														{{ request.foundParent.firstName }}
														{{ request.foundParent.lastName }}
													</div>
													<div class="text-sm text-slate-500">{{ request.foundParent.email }}</div>
													<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
														{{ request.foundParent.role }}
													</span>
												</div>
											{% else %}
												<span class="text-sm text-slate-500">Aucun parent trouvé</span>
											{% endif %}
										</td>
										<td class="px-6 py-4 whitespace-nowrap">
											{% if request.status == 'PENDING' %}
												<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
													En attente
												</span>
											{% elseif request.status == 'PROCESSING' %}
												<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
													En traitement
												</span>
											{% elseif request.status == 'COMPLETED' %}
												<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
													Complétée
												</span>
											{% elseif request.status == 'REJECTED' %}
												<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
													Rejetée
												</span>
											{% endif %}
										</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
											<div class="flex space-x-2">
												{% if request.status == 'PENDING' or request.status == 'PROCESSING' %}
													<button onclick="approveRequest({{ request.id }})" class="text-green-600 hover:text-green-900 bg-green-100 hover:bg-green-200 px-3 py-1 rounded-md transition-colors">
														<svg class="h-4 w-4 inline mr-1" fill="none" viewbox="0 0 24 24" stroke="currentColor">
															<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
														</svg>
														Approuver
													</button>
													<button onclick="rejectRequest({{ request.id }})" class="text-red-600 hover:text-red-900 bg-red-100 hover:bg-red-200 px-3 py-1 rounded-md transition-colors">
														<svg class="h-4 w-4 inline mr-1" fill="none" viewbox="0 0 24 24" stroke="currentColor">
															<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
														</svg>
														Rejeter
													</button>
												{% endif %}
												<button onclick="deleteRequest({{ request.id }})" class="text-slate-600 hover:text-slate-900 bg-slate-100 hover:bg-slate-200 px-3 py-1 rounded-md transition-colors">
													<svg class="h-4 w-4 inline mr-1" fill="none" viewbox="0 0 24 24" stroke="currentColor">
														<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
													</svg>
													Supprimer
												</button>
											</div>
										</td>
									</tr>
								{% endfor %}
							</tbody>
						</table>
					</div>
				{% else %}
					<div class="px-6 py-8 text-center">
						<div class="text-slate-400 mb-4">
							<svg class="mx-auto h-16 w-16" fill="none" viewbox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"/>
							</svg>
						</div>
						<h3 class="text-lg font-medium text-slate-900 mb-2">Aucune demande d'identifiants</h3>
						<p class="text-slate-500">Aucune demande n'a été soumise pour le moment.</p>
					</div>
				{% endif %}
			</div>
		</div>
	</div>

	<!-- Modales pour confirmation -->
	<div id="approveModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
		<div class="flex items-center justify-center min-h-screen px-4">
			<div class="bg-white rounded-lg max-w-md w-full p-6">
				<h3 class="text-lg font-medium text-slate-900 mb-4">Approuver la demande</h3>
				<p class="text-slate-600 mb-4">Voulez-vous vraiment approuver cette demande d'identifiants ?</p>
				<textarea id="approveNotes" placeholder="Notes optionnelles..." class="w-full p-3 border border-slate-300 rounded-lg mb-4"></textarea>
				<div class="flex justify-end space-x-3">
					<button onclick="closeModal('approveModal')" class="px-4 py-2 text-slate-600 hover:text-slate-800">Annuler</button>
					<button id="confirmApprove" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700">Approuver</button>
				</div>
			</div>
		</div>
	</div>

	<div id="rejectModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
		<div class="flex items-center justify-center min-h-screen px-4">
			<div class="bg-white rounded-lg max-w-md w-full p-6">
				<h3 class="text-lg font-medium text-slate-900 mb-4">Rejeter la demande</h3>
				<p class="text-slate-600 mb-4">Voulez-vous vraiment rejeter cette demande d'identifiants ?</p>
				<textarea id="rejectReason" placeholder="Raison du rejet..." class="w-full p-3 border border-slate-300 rounded-lg mb-4"></textarea>
				<textarea id="rejectNotes" placeholder="Notes optionnelles..." class="w-full p-3 border border-slate-300 rounded-lg mb-4"></textarea>
				<div class="flex justify-end space-x-3">
					<button onclick="closeModal('rejectModal')" class="px-4 py-2 text-slate-600 hover:text-slate-800">Annuler</button>
					<button id="confirmReject" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700">Rejeter</button>
				</div>
			</div>
		</div>
	</div>

	<script>
		let currentRequestId = null;

function approveRequest(id) {
currentRequestId = id;
document.getElementById('approveModal').classList.remove('hidden');
}

function rejectRequest(id) {
currentRequestId = id;
document.getElementById('rejectModal').classList.remove('hidden');
}

function deleteRequest(id) {
if (confirm('Voulez-vous vraiment supprimer cette demande ?')) {
fetch (`/directeur/credentials/${id}/delete`, {
method: 'POST',
headers: {
'Content-Type': 'application/json'
}
}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur: ' + data.message);
}
}).catch(error => {
console.error('Erreur:', error);
alert('Erreur lors de la suppression');
});
}
}

function closeModal(modalId) {
document.getElementById(modalId).classList.add('hidden');
currentRequestId = null;
}

document.getElementById('confirmApprove').addEventListener('click', function () {
const notes = document.getElementById('approveNotes').value;

fetch (`/directeur/credentials/${currentRequestId}/approve`, {
method: 'POST',
headers: {
'Content-Type': 'application/json'
},
body: JSON.stringify({notes})
}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur: ' + data.message);
}
}).catch(error => {
console.error('Erreur:', error);
alert('Erreur lors de l\'approbation');
});
});

document.getElementById('confirmReject').addEventListener('click', function () {
const reason = document.getElementById('rejectReason').value;
const notes = document.getElementById('rejectNotes').value;

fetch (`/directeur/credentials/${currentRequestId}/reject`, {
method: 'POST',
headers: {
'Content-Type': 'application/json'
},
body: JSON.stringify(
{reason, notes}
)
}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur: ' + data.message);
}
}).catch(error => {
console.error('Erreur:', error);
alert('Erreur lors du rejet');
});
});

// Fermer les modales en cliquant à l'extérieur
document.getElementById('approveModal').addEventListener('click', function (e) {
if (e.target === this) {
closeModal('approveModal');
}
});

document.getElementById('rejectModal').addEventListener('click', function (e) {
if (e.target === this) {
closeModal('rejectModal');
}
});
	</script>
{% endblock %}
