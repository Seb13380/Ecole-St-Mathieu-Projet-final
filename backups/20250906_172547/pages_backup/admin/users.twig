{% extends "layouts/admin.twig" %}

{% block title %}
	{{ title }}
{% endblock %}

{% block content %}
	<div
		class="container mx-auto px-4 py-6">
		<!-- En-tête -->
		<div class="mb-6">
			<h1 class="text-3xl font-bold text-gray-800 mb-2">{{ title }}</h1>
			<p class="text-gray-600">Gérez les utilisateurs de l'école</p>
		</div>

		<!-- Messages -->
		{% if success %}
			<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4">
				{{ success }}
			</div>
		{% endif %}

		{% if error %}
			<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
				{{ error }}
			</div>
		{% endif %}

		<!-- Bouton Créer utilisateur -->
		<div class="mb-6">
			<button id="addUserBtn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
				<i class="fas fa-plus mr-2"></i>Ajouter un utilisateur
			</button>
		</div>

		<!-- Tableau des utilisateurs -->
		<div class="bg-white shadow-md rounded-lg overflow-hidden">
			<table class="min-w-full divide-y divide-gray-200">
				<thead class="bg-gray-50">
					<tr>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Nom
						</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Email
						</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Rôle
						</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Téléphone
						</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Enfants
						</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Date d'inscription
						</th>
						<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Actions
						</th>
					</tr>
				</thead>
				<tbody class="bg-white divide-y divide-gray-200">
					{% for user in users %}
						<tr>
							<td class="px-6 py-4 whitespace-nowrap">
								<div class="flex items-center">
									<div class="ml-4">
										<div class="text-sm font-medium text-gray-900">
											{{ user.firstName }}
											{{ user.lastName }}
										</div>
									</div>
								</div>
							</td>
							<td class="px-6 py-4 whitespace-nowrap">
								<div class="text-sm text-gray-900">{{ user.email }}</div>
							</td>
							<td class="px-6 py-4 whitespace-nowrap">
								<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full
										                            {% if user.role == 'ADMIN' or user.role == 'DIRECTION' %}
										                                bg-red-100 text-red-800
										                            {% elseif user.role == 'ENSEIGNANT' %}
										                                bg-blue-100 text-blue-800
										                            {% elseif user.role == 'RESTAURANT' %}
										                                bg-green-100 text-green-800
										                            {% else %}
										                                bg-gray-100 text-gray-800
										                            {% endif %}">
									{{ user.role }}
								</span>
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
								{{ user.phone|default('Non renseigné') }}
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
								{{ user._count.enfants }}
								enfant(s)
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
								{{ user.createdAt|date('d/m/Y') }}
							</td>
							<td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
								<button onclick="editUser({{ user.id }})" class="text-indigo-600 hover:text-indigo-900 mr-3">
									<i class="fas fa-edit"></i>
								</button>
								{% if user.role != 'ADMIN' and user.role != 'DIRECTION' %}
									<button onclick="deleteUser({{ user.id }})" class="text-red-600 hover:text-red-900">
										<i class="fas fa-trash"></i>
									</button>
								{% endif %}
							</td>
						</tr>
					{% endfor %}
				</tbody>
			</table>
		</div>
	</div>

	<!-- Modal Ajouter/Modifier utilisateur -->
	<div id="userModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
		<div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
			<div class="mt-3">
				<h3 class="text-lg font-medium text-gray-900 mb-4" id="modalTitle">Ajouter un utilisateur</h3>
				<form id="userForm">
					<input type="hidden" id="userId" name="userId">

					<div class="mb-4">
						<label class="block text-sm font-medium text-gray-700 mb-2">Prénom</label>
						<input type="text" id="firstName" name="firstName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
					</div>

					<div class="mb-4">
						<label class="block text-sm font-medium text-gray-700 mb-2">Nom</label>
						<input type="text" id="lastName" name="lastName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
					</div>

					<div class="mb-4">
						<label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
						<input type="email" id="email" name="email" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
					</div>

					<div class="mb-4" id="passwordField">
						<label class="block text-sm font-medium text-gray-700 mb-2">Mot de passe</label>
						<input type="password" id="password" name="password" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
					</div>

					<div class="mb-4">
						<label class="block text-sm font-medium text-gray-700 mb-2">Rôle</label>
						<select id="role" name="role" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
							<option value="">Sélectionner un rôle</option>
							<option value="PARENT">Parent</option>
							<option value="ENSEIGNANT">Enseignant</option>
							<option value="RESTAURANT">Restaurant</option>
							<option value="ADMIN">Administrateur</option>
						</select>
					</div>

					<div class="mb-4">
						<label class="block text-sm font-medium text-gray-700 mb-2">Téléphone</label>
						<input type="tel" id="phone" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
					</div>

					<div class="mb-4">
						<label class="block text-sm font-medium text-gray-700 mb-2">Adresse</label>
						<textarea id="adress" name="adress" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"></textarea>
					</div>

					<div class="flex justify-end space-x-3">
						<button type="button" id="cancelBtn" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400">
							Annuler
						</button>
						<button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
							Enregistrer
						</button>
					</div>
				</form>
			</div>
		</div>
	</div>

	<script>
		let isEditMode = false;
let currentUserId = null;

// Ouvrir le modal pour ajouter
document.getElementById('addUserBtn').addEventListener('click', function () {
isEditMode = false;
document.getElementById('modalTitle').textContent = 'Ajouter un utilisateur';
document.getElementById('userForm').reset();
document.getElementById('userId').value = '';
document.getElementById('passwordField').style.display = 'block';
document.getElementById('password').required = true;
document.getElementById('userModal').classList.remove('hidden');
});

// Fermer le modal
document.getElementById('cancelBtn').addEventListener('click', function () {
document.getElementById('userModal').classList.add('hidden');
});

// Soumettre le formulaire
document.getElementById('userForm').addEventListener('submit', function (e) {
e.preventDefault();

const formData = new FormData(this);
const data = Object.fromEntries(formData);

if (isEditMode) { // Mise à jour
fetch (`/directeur/users/${currentUserId}/update`, {
method: 'POST',
headers: {
'Content-Type': 'application/json'
},
body: JSON.stringify(data)
}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur: ' + data.message);
}
});
} else { // Création
fetch('/directeur/users', {
method: 'POST',
headers: {
'Content-Type': 'application/json'
},
body: JSON.stringify(data)
}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur: ' + data.message);
}
});
}
});

// Éditer un utilisateur
async function editUser(userId) {
    try {
        // Récupérer les données de l'utilisateur depuis l'API
        const response = await fetch(`/directeur/users/${userId}`);
        const data = await response.json();
        
        if (!data.success) {
            alert('Erreur: ' + data.message);
            return;
        }
        
        const user = data.user;
        
        isEditMode = true;
        currentUserId = userId;
        document.getElementById('modalTitle').textContent = 'Modifier l\'utilisateur';
        
        // Remplir le formulaire avec les données de l'utilisateur
        document.getElementById('firstName').value = user.firstName || '';
        document.getElementById('lastName').value = user.lastName || '';
        document.getElementById('email').value = user.email || '';
        document.getElementById('phone').value = user.phone || '';
        document.getElementById('role').value = user.role || '';
        
        // Masquer le champ mot de passe pour la modification
        document.getElementById('passwordField').style.display = 'none';
        document.getElementById('password').required = false;
        
        document.getElementById('userModal').classList.remove('hidden');
    } catch (error) {
        console.error('Erreur lors de la récupération des données utilisateur:', error);
        alert('Erreur lors de la récupération des données utilisateur');
    }
}

// Supprimer un utilisateur
function deleteUser(userId) {
if (confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?')) {
fetch (`/directeur/users/${userId}/delete`, {method: 'POST'}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur: ' + data.message);
}
});
}
}
	</script>
{% endblock %}
