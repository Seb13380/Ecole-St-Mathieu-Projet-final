{% extends "layouts/base.twig" %}

{% block title %}Gestion des Médias - École Saint-Mathieu
{% endblock %}

{% block styles %}
	<style>
		.image-card {
			transition: all 0.3s ease;
			border-radius: 0.5rem;
			overflow: hidden;
		}
		.image-card:hover {
			transform: translateY(-2px);
			box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
		}
		.image-preview {
			aspect-ratio: 1;
			object-fit: cover;
			width: 100%;
			height: 200px;
		}
		.upload-zone {
			border: 2px dashed #d1d5db;
			border-radius: 0.5rem;
			transition: all 0.3s ease;
		}
		.upload-zone:hover {
			border-color: #3b82f6;
			background-color: #eff6ff;
		}
		.upload-zone.dragover {
			border-color: #1d4ed8;
			background-color: #dbeafe;
		}
	</style>
{% endblock %}

{% block main %}
	<div
		class="container mx-auto px-4 py-8">
		<!-- En-tête -->
		<div class="bg-white rounded-lg shadow-md p-6 mb-8">
			<div class="flex items-center justify-between">
				<div>
					<h1 class="text-3xl font-bold text-gray-800 mb-2">
						<i class="fas fa-images text-purple-500 mr-3"></i>
						Gestion des Médias
					</h1>
					<p class="text-gray-600">
						Gérez les photos et images utilisées sur le site de l'école
					</p>
				</div>
				<div class="text-right">
					<p class="text-sm text-gray-500">Connecté en tant que</p>
					<p class="font-semibold text-gray-700">{{ user.firstName }}
						{{ user.lastName }}</p>
					<span class="inline-block px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full">
						{{ user.role }}
					</span>
				</div>
			</div>
		</div>

		<!-- Messages de feedback -->
		{% if success %}
			<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6" role="alert">
				<span class="block sm:inline">{{ success }}</span>
			</div>
		{% endif %}

		{% if error %}
			<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6" role="alert">
				<span class="block sm:inline">{{ error }}</span>
			</div>
		{% endif %}

		<!-- Zone d'upload -->
		<div class="bg-white rounded-lg shadow-md p-6 mb-8">
			<h2 class="text-xl font-semibold text-gray-800 mb-4">
				<i class="fas fa-cloud-upload-alt text-blue-500 mr-2"></i>
				Ajouter des Images
			</h2>

			<form action="/admin/media/upload" method="POST" enctype="multipart/form-data" id="uploadForm">
				<div class="upload-zone p-8 text-center" id="uploadZone">
					<div class="mb-4">
						<i class="fas fa-images text-gray-400 text-6xl mb-4"></i>
					</div>
					<div class="mb-4">
						<input type="file" id="imageFiles" name="images" multiple accept="image/*" class="hidden">
						<label for="imageFiles" class="cursor-pointer inline-block bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition">
							<i class="fas fa-plus mr-2"></i>
							Sélectionner des images
						</label>
					</div>
					<p class="text-gray-500 text-sm">
						Ou glissez-déposez vos images ici<br>
						Formats acceptés : JPEG, PNG, GIF, WebP (max 5MB par image)
					</p>
				</div>

				<!-- Aperçu des fichiers sélectionnés -->
				<div id="filePreview" class="mt-4 hidden">
					<h3 class="font-medium text-gray-800 mb-2">Fichiers sélectionnés :</h3>
					<div id="previewContainer" class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4"></div>
					<div class="mt-4 text-center">
						<button type="submit" class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition">
							<i class="fas fa-upload mr-2"></i>
							Uploader les images
						</button>
					</div>
				</div>
			</form>
		</div>

		<!-- Galerie d'images -->
		<div class="bg-white rounded-lg shadow-md p-6">
			<div class="flex items-center justify-between mb-6">
				<h2 class="text-xl font-semibold text-gray-800">
					<i class="fas fa-photo-video text-green-500 mr-2"></i>
					Images Existantes ({{ images|length }})
				</h2>

				{% if images|length > 0 %}
					<div class="text-sm text-gray-500">
						Total :
						{{ images|length }}
						image(s)
					</div>
				{% endif %}
			</div>

			{% if images|length > 0 %}
				<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6">
					{% for image in images %}
						<div class="image-card bg-white border shadow-sm" data-filename="{{ image.filename }}">
							<div class="relative group">
								<img
								src="{{ image.url }}" alt="{{ image.filename }}" class="image-preview" loading="lazy">

								<!-- Overlay avec actions -->
								<div class="absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center space-x-2">
									<button onclick="viewImage('{{ image.url }}', '{{ image.filename }}')" class="bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition" title="Voir en grand">
										<i class="fas fa-eye"></i>
									</button>
									<button onclick="copyImageUrl('{{ image.url }}')" class="bg-green-600 text-white p-2 rounded-lg hover:bg-green-700 transition" title="Copier l'URL">
										<i class="fas fa-copy"></i>
									</button>
									<button onclick="deleteImage('{{ image.filename }}')" class="bg-red-600 text-white p-2 rounded-lg hover:bg-red-700 transition" title="Supprimer">
										<i class="fas fa-trash"></i>
									</button>
								</div>
							</div>

							<div class="p-3">
								<p class="text-sm font-medium text-gray-800 truncate" title="{{ image.filename }}">
									{{ image.filename }}
								</p>
								<div class="text-xs text-gray-500 mt-1">
									<p>{{ (image.size / 1024) | round(1) }}
										KB</p>
									<p>{{ image.uploadDate|date('d/m/Y') }}</p>
								</div>
							</div>
						</div>
					{% endfor %}
				</div>
			{% else %}
				<div class="text-center py-12">
					<i class="fas fa-images text-gray-300 text-6xl mb-4"></i>
					<h3 class="text-lg font-medium text-gray-900 mb-2">Aucune image</h3>
					<p class="text-gray-500">Commencez par uploader vos premières images.</p>
				</div>
			{% endif %}
		</div>
	</div>

	<!-- Modal de visualisation -->
	<div id="imageModal" class="fixed inset-0 bg-black bg-opacity-75 hidden items-center justify-center z-50">
		<div class="max-w-4xl max-h-screen p-4">
			<div class="bg-white rounded-lg overflow-hidden">
				<div class="flex items-center justify-between p-4 border-b">
					<h3 id="modalTitle" class="text-lg font-medium text-gray-900"></h3>
					<button onclick="closeImageModal()" class="text-gray-400 hover:text-gray-600 transition">
						<i class="fas fa-times text-xl"></i>
					</button>
				</div>
				<div class="p-4">
					<img id="modalImage" src="" alt="" class="max-w-full max-h-96 mx-auto">
				</div>
			</div>
		</div>
	</div>

	<!-- Modal de confirmation de suppression -->
	<div id="deleteModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden items-center justify-center z-50">
		<div class="bg-white rounded-lg p-6 max-w-md mx-4">
			<h3 class="text-lg font-medium text-gray-900 mb-4">Confirmer la suppression</h3>
			<p class="text-gray-600 mb-6">Êtes-vous sûr de vouloir supprimer cette image ? Cette action est irréversible.</p>
			<div class="flex justify-end space-x-3">
				<button onclick="closeDeleteModal()" class="px-4 py-2 text-gray-600 hover:text-gray-800 transition">
					Annuler
				</button>
				<button id="confirmDelete" class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition">
					Supprimer
				</button>
			</div>
		</div>
	</div>
{% endblock %}

{% block scripts %}
	<script>
		let imageToDelete = null;

// Gestion du drag & drop
const uploadZone = document.getElementById('uploadZone');
const fileInput = document.getElementById('imageFiles');

uploadZone.addEventListener('dragover', (e) => {
e.preventDefault();
uploadZone.classList.add('dragover');
});

uploadZone.addEventListener('dragleave', () => {
uploadZone.classList.remove('dragover');
});

uploadZone.addEventListener('drop', (e) => {
e.preventDefault();
uploadZone.classList.remove('dragover');

const files = e.dataTransfer.files;
fileInput.files = files;
previewFiles(files);
});

// Gestion de la sélection de fichiers
fileInput.addEventListener('change', (e) => {
previewFiles(e.target.files);
});

function previewFiles(files) {
const preview = document.getElementById('filePreview');
const container = document.getElementById('previewContainer');

if (files.length === 0) {
preview.classList.add('hidden');
return;
}

container.innerHTML = '';

Array.from(files).forEach(file => {
if (file.type.startsWith('image/')) {
const reader = new FileReader();
reader.onload = (e) => {
const div = document.createElement('div');
div.className = 'relative';
div.innerHTML = `
                    <img src="${
e.target.result
}" alt="${
file.name
}" class="w-full h-20 object-cover rounded">
                    <p class="text-xs text-gray-600 mt-1 truncate">${
file.name
}</p>
                `;
container.appendChild(div);
};
reader.readAsDataURL(file);
}
});

preview.classList.remove('hidden');
}

function viewImage(url, filename) {
document.getElementById('modalImage').src = url;
document.getElementById('modalTitle').textContent = filename;
document.getElementById('imageModal').classList.remove('hidden');
document.getElementById('imageModal').classList.add('flex');
}

function closeImageModal() {
document.getElementById('imageModal').classList.add('hidden');
document.getElementById('imageModal').classList.remove('flex');
}

function copyImageUrl(url) {
const fullUrl = window.location.origin + url;
navigator.clipboard.writeText(fullUrl).then(() => { // Créer une notification temporaire
const notification = document.createElement('div');
notification.className = 'fixed top-4 right-4 bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg z-50';
notification.textContent = 'URL copiée !';
document.body.appendChild(notification);

setTimeout(() => {
document.body.removeChild(notification);
}, 2000);
});
}

function deleteImage(filename) {
imageToDelete = filename;
document.getElementById('deleteModal').classList.remove('hidden');
document.getElementById('deleteModal').classList.add('flex');
}

function closeDeleteModal() {
document.getElementById('deleteModal').classList.add('hidden');
document.getElementById('deleteModal').classList.remove('flex');
imageToDelete = null;
}

document.getElementById('confirmDelete').addEventListener('click', function () {
if (imageToDelete) {
fetch (`/admin/media/${imageToDelete}`, {
method: 'DELETE',
headers: {
'Content-Type': 'application/json'
}
}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur lors de la suppression de l\'image');
}
}).catch(error => {
console.error('Erreur:', error);
alert('Erreur lors de la suppression de l\'image');
});
}
closeDeleteModal();
});
	</script>
{% endblock %}
