const emailService = require('./src/services/emailService');

async function testBothEmails() {
    try {
        console.log('üß™ Test comparatif emails sur VPS...');
        console.log('üìß Variables d\'environnement:');
        console.log('EMAIL_USER:', process.env.EMAIL_USER);
        console.log('EMAIL_PASS:', process.env.EMAIL_PASS ? 'D√©fini' : 'Non d√©fini');

        // Test 1: Email actualit√© (qui fonctionne)
        console.log('\n1Ô∏è‚É£ Test email actualit√©...');
        try {
            const actualiteData = {
                titre: 'Test actualit√©',
                contenu: 'Ceci est un test',
                auteur: 'Test',
                datePublication: new Date(),
                important: false
            };

            const parentEmails = ['sgdigitalweb13@gmail.com'];
            const actualiteResult = await emailService.sendNewActualiteNotification(actualiteData, parentEmails);

            if (actualiteResult.success) {
                console.log('‚úÖ Email actualit√© envoy√© avec succ√®s:', actualiteResult.messageId);
            } else {
                console.log('‚ùå Email actualit√© √©chou√©:', actualiteResult.error);
            }
        } catch (error) {
            console.log('‚ùå Erreur actualit√©:', error.message);
        }

        // Test 2: Email inscription (qui ne fonctionne pas)
        console.log('\n2Ô∏è‚É£ Test email inscription...');
        try {
            const inscriptionData = {
                requestId: 'TEST-' + Date.now(),
                parentName: 'Test Parent',
                parentEmail: 'parent.test@example.com',
                parentPhone: '06 12 34 56 78',
                parentAddress: '123 Rue Test',
                children: [
                    {
                        firstName: 'Test',
                        lastName: 'Enfant',
                        birthDate: '2015-05-15'
                    }
                ],
                submittedAt: new Date(),
                adminEmail: 'sgdigitalweb13@gmail.com'
            };

            const inscriptionResult = await emailService.sendNewInscriptionNotification(inscriptionData);

            if (inscriptionResult.success) {
                console.log('‚úÖ Email inscription envoy√© avec succ√®s:', inscriptionResult.messageId);
            } else {
                console.log('‚ùå Email inscription √©chou√©:', inscriptionResult.error);
            }
        } catch (error) {
            console.log('‚ùå Erreur inscription:', error.message);
        }

    } catch (error) {
        console.error('‚ùå Erreur g√©n√©rale:', error.message);
    }

    process.exit(0);
}

testBothEmails();