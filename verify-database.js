const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function verifyDatabase() {
    try {
        console.log('üîç V√©rification de la base de donn√©es...');

        // Tester la connexion
        await prisma.$connect();
        console.log('‚úÖ Connexion √† la base de donn√©es √©tablie');

        // V√©rifier les tables principales
        const tables = [
            { name: 'User', model: prisma.user },
            { name: 'Student', model: prisma.student },
            { name: 'Classe', model: prisma.classe },
            { name: 'InscriptionRequest', model: prisma.inscriptionRequest },
            { name: 'Actualite', model: prisma.actualite },
            { name: 'Travaux', model: prisma.travaux }
        ];

        for (const table of tables) {
            try {
                const count = await table.model.count();
                console.log(`‚úÖ Table ${table.name}: ${count} enregistrements`);
            } catch (error) {
                console.log(`‚ùå Erreur table ${table.name}:`, error.message);
            }
        }

        // V√©rifier l'utilisateur Lionel
        const lionel = await prisma.user.findUnique({
            where: { email: 'lionel.camboulives@ecole-saint-mathieu.fr' }
        });

        if (lionel) {
            console.log('‚úÖ Compte Lionel trouv√©:', lionel.firstName, lionel.lastName, '- R√¥le:', lionel.role);
        } else {
            console.log('‚ùå Compte Lionel non trouv√©');
        }

        // V√©rifier les demandes d'inscription
        const inscriptions = await prisma.inscriptionRequest.findMany({
            take: 5,
            orderBy: { createdAt: 'desc' }
        });

        console.log(`‚úÖ Demandes d'inscription: ${inscriptions.length} trouv√©es`);

        console.log('\nüéâ V√©rification termin√©e !');

    } catch (error) {
        console.error('‚ùå Erreur lors de la v√©rification:', error);
    } finally {
        await prisma.$disconnect();
    }
}

// Ex√©cuter si appel√© directement
if (require.main === module) {
    verifyDatabase();
}

module.exports = { verifyDatabase };
