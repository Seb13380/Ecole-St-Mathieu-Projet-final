{% extends "layouts/base.twig" %}

{% block title %}Gestion des Menus PDF - École Saint-Mathieu
{% endblock %}

{% block styles %}
	<style>
		.menu-card {
			transition: all 0.3s ease;
			border-left: 4px solid transparent;
		}
		.menu-card.active {
			border-left-color: #10b981;
			background-color: #f0fdf4;
		}
		.menu-card.planned {
			border-left-color: #f59e0b;
			background-color: #fffbeb;
		}
		.menu-card.draft {
			border-left-color: #6b7280;
			background-color: #f9fafb;
		}
		.menu-card.archived {
			border-left-color: #ef4444;
			background-color: #fef2f2;
		}
		.status-badge {
			font-size: 0.75rem;
			font-weight: 600;
			padding: 0.25rem 0.75rem;
			border-radius: 9999px;
			text-transform: uppercase;
		}
		.status-actif {
			background-color: #dcfce7;
			color: #166534;
		}
		.status-planifie {
			background-color: #fef3c7;
			color: #92400e;
		}
		.status-brouillon {
			background-color: #f3f4f6;
			color: #374151;
		}
		.status-archive {
			background-color: #fecaca;
			color: #991b1b;
		}
		.upload-zone {
			border: 2px dashed #cbd5e0;
			transition: all 0.3s ease;
		}
		.upload-zone:hover {
			border-color: #3182ce;
			background-color: #ebf8ff;
		}
		.upload-zone.dragover {
			border-color: #3182ce;
			background-color: #ebf8ff;
		}
	</style>
{% endblock %}

{% block main %}
	<div class="min-h-screen bg-gray-50 py-8">
		<div
			class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<!-- Header -->
			<div class="mb-8">
				<div class="flex justify-between items-center">
					<div>
						<h1 class="text-3xl font-bold text-gray-900">🍽️ Gestion des Menus PDF</h1>
						<p class="mt-2 text-gray-600">Gérez les menus hebdomadaires de la cantine</p>
					</div>
					<button id="newMenuBtn" class="Btn bg-[#006B6D] text-white px-6 py-3 rounded-lg hover:bg-[#005659] transition-colors">
						📄 Nouveau Menu PDF
					</button>
				</div>
			</div>

			<!-- Notification alerts -->
			{% if success %}
				<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6" role="alert">
					<span class="block sm:inline">✅
						{{ success }}</span>
				</div>
			{% endif %}

			{% if error %}
				<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6" role="alert">
					<span class="block sm:inline">❌
						{{ error }}</span>
				</div>
			{% endif %}

			<!-- Upload Modal -->
			<div id="uploadModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50" style="display: none;">
				<div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
					<div class="mt-3">
						<h3 class="text-lg font-medium text-gray-900 mb-4">📄 Nouveau Menu PDF</h3>
						<form id="uploadForm" action="/admin/menus-pdf/create" method="POST" enctype="multipart/form-data">
							<div class="mb-4">
								<label class="block text-sm font-medium text-gray-700 mb-2">Fichier PDF du menu</label>
								<div class="upload-zone p-6 text-center rounded-lg">
									<input type="file" id="menuPdf" name="menuPdf" accept=".pdf" required class="hidden">
									<div id="dropZone" class="cursor-pointer">
										<svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewbox="0 0 48 48">
											<path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
										</svg>
										<p class="mt-2 text-sm text-gray-600">
											<span class="text-blue-600">Cliquez pour choisir</span>
											ou glissez votre fichier PDF ici
										</p>
										<p class="text-xs text-gray-500 mt-1">PDF uniquement, max 10MB</p>
									</div>
									<div id="fileInfo" class="hidden mt-2 text-sm text-green-600"></div>
								</div>
							</div>

							<div class="mb-4">
								<label class="flex items-center">
									<input type="checkbox" name="actif" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
									<span class="ml-2 text-sm text-gray-700">Activer ce menu immédiatement</span>
								</label>
							</div>

							<div class="flex justify-end space-x-3">
								<button type="button" id="cancelBtn" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition-colors">
									Annuler
								</button>
								<button type="submit" class="Btn bg-[#006B6D] text-white px-4 py-2 rounded-lg hover:bg-[#005659] transition-colors">
									Enregistrer
								</button>
							</div>
						</form>
					</div>
				</div>
			</div>

			<!-- Menus List -->
			<div class="space-y-6">
				{% if menus|length > 0 %}
					{% for menu in menus %}
						<div class="menu-card bg-white rounded-lg shadow-md p-6 {{ menu.statut|lower }}">
							<div class="flex justify-between items-start">
								<div class="flex-1">
									<div class="flex items-center space-x-3 mb-2">
										<h3 class="text-lg font-semibold text-gray-900">{{ menu.semaine }}</h3>
										<span class="status-badge status-{{ menu.statut|lower }}">
											{{ menu.statut }}
										</span>
									</div>

									<div class="grid grid-cols-2 gap-4 text-sm text-gray-600 mb-4">
										{% if menu.dateDebut and menu.dateFin %}
											<div>
												<span class="font-medium">📅 Période:</span>
												{{ menu.dateDebut|date('d/m/Y') }}
												-
												{{ menu.dateFin|date('d/m/Y') }}
											</div>
										{% endif %}
										<div>
											<span class="font-medium">👤 Créé par:</span>
											{{ menu.auteur.firstName }}
											{{ menu.auteur.lastName }}
										</div>
										<div>
											<span class="font-medium">📝 Créé le:</span>
											{{ menu.createdAt|date('d/m/Y à H:i') }}
										</div>
										{% if menu.pdfFilename %}
											<div>
												<span class="font-medium">📄 Fichier:</span>
												{{ menu.pdfFilename }}
											</div>
										{% endif %}
									</div>
								</div>

								<div class="flex space-x-2">
									{% if menu.pdfUrl %}
										<a href="{{ menu.pdfUrl }}" target="_blank" class="inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition-colors">
											👁️ Voir PDF
										</a>
									{% endif %}

									<button onclick="toggleMenu({{ menu.id }})" class="inline-flex items-center px-3 py-2 border border-transparent rounded-md text-sm font-medium text-white {{ menu.actif ? 'bg-yellow-600 hover:bg-yellow-700' : 'bg-green-600 hover:bg-green-700' }} transition-colors">
										{{ menu.actif ? '⏸️ Désactiver' : '▶️ Activer' }}
									</button>

									<button onclick="deleteMenu({{ menu.id }})" class="inline-flex items-center px-3 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-red-600 hover:bg-red-700 transition-colors">
										🗑️ Supprimer
									</button>
								</div>
							</div>
						</div>
					{% endfor %}
				{% else %}
					<div class="text-center py-12 bg-white rounded-lg shadow-md">
						<svg class="mx-auto h-24 w-24 text-gray-400" fill="none" viewbox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
						</svg>
						<h3 class="mt-4 text-lg font-medium text-gray-900">Aucun menu pour le moment</h3>
						<p class="mt-2 text-gray-500">Commencez par créer votre premier menu PDF.</p>
						<button onclick="document.getElementById('newMenuBtn').click()" class="mt-4 Btn bg-[#006B6D] text-white px-6 py-3 rounded-lg hover:bg-[#005659] transition-colors">
							📄 Créer le premier menu
						</button>
					</div>
				{% endif %}
			</div>
		</div>
	</div>

	<!-- Scripts -->
	<script>
		// Modal management
const modal = document.getElementById('uploadModal');
const newMenuBtn = document.getElementById('newMenuBtn');
const cancelBtn = document.getElementById('cancelBtn');
const uploadForm = document.getElementById('uploadForm');
const fileInput = document.getElementById('menuPdf');
const dropZone = document.getElementById('dropZone');
const fileInfo = document.getElementById('fileInfo');

newMenuBtn.addEventListener('click', () => {
modal.style.display = 'block';
});

cancelBtn.addEventListener('click', () => {
modal.style.display = 'none';
uploadForm.reset();
fileInfo.classList.add('hidden');
});

window.addEventListener('click', (e) => {
if (e.target === modal) {
modal.style.display = 'none';
}
});

// File upload handling
dropZone.addEventListener('click', () => fileInput.click());

fileInput.addEventListener('change', (e) => {
handleFile(e.target.files[0]);
});

// Drag and drop
dropZone.addEventListener('dragover', (e) => {
e.preventDefault();
dropZone.classList.add('dragover');
});

dropZone.addEventListener('dragleave', () => {
dropZone.classList.remove('dragover');
});

dropZone.addEventListener('drop', (e) => {
e.preventDefault();
dropZone.classList.remove('dragover');
const file = e.dataTransfer.files[0];
if (file && file.type === 'application/pdf') {
fileInput.files = e.dataTransfer.files;
handleFile(file);
} else {
alert('Veuillez sélectionner un fichier PDF valide.');
}
});

function handleFile(file) {
if (file) {
fileInfo.textContent = `✅ ${
file.name
} (${
(file.size / 1024 / 1024).toFixed(2)
} MB)`;
fileInfo.classList.remove('hidden');
}
}

// Menu actions
function toggleMenu(menuId) {
if (confirm('Êtes-vous sûr de vouloir modifier l\'état de ce menu ?')) {
fetch (`/admin/menus-pdf/${menuId}/toggle`, {
method: 'POST',
headers: {
'Content-Type': 'application/json'
}
}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur lors de la modification du menu');
}
}).catch(error => {
console.error('Error:', error);
alert('Erreur lors de la modification du menu');
});
}
}

function deleteMenu(menuId) {
if (confirm('Êtes-vous sûr de vouloir supprimer ce menu ? Cette action est irréversible.')) {
fetch (`/admin/menus-pdf/${menuId}`, {
method: 'DELETE',
headers: {
'Content-Type': 'application/json'
}
}).then(response => response.json()).then(data => {
if (data.success) {
location.reload();
} else {
alert('Erreur lors de la suppression du menu');
}
}).catch(error => {
console.error('Error:', error);
alert('Erreur lors de la suppression du menu');
});
}
}
	</script>
{% endblock %}
