const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function setupDefaultClass() {
    try {
        console.log('üîÑ V√©rification de la classe par d√©faut...');

        // V√©rifier si la classe "Non assign√©" existe
        let defaultClasse = await prisma.classe.findFirst({
            where: { nom: 'Non assign√©' }
        });

        if (!defaultClasse) {
            // Cr√©er la classe par d√©faut
            defaultClasse = await prisma.classe.create({
                data: {
                    nom: 'Non assign√©',
                    niveau: 'A d√©finir',
                    anneeScolaire: new Date().getFullYear() + '-' + (new Date().getFullYear() + 1)
                }
            });
            console.log('‚úÖ Classe par d√©faut cr√©√©e:', defaultClasse.nom);
        } else {
            console.log('‚úÖ Classe par d√©faut existe d√©j√†:', defaultClasse.nom);
        }

        console.log('üéâ Configuration termin√©e !');
    } catch (error) {
        console.error('‚ùå Erreur lors de la configuration:', error);
    } finally {
        await prisma.$disconnect();
    }
}

// Ex√©cuter si appel√© directement
if (require.main === module) {
    setupDefaultClass();
}

module.exports = { setupDefaultClass };
