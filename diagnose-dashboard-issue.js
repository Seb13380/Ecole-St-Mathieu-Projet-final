const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function diagnoseDashboardIssue() {
    console.log('üîç === DIAGNOSTIC DASHBOARD SECR√âTAIRE ===\n');

    try {
        // 1. V√©rifier le compte de Yamina
        const yamina = await prisma.user.findFirst({
            where: {
                role: 'SECRETAIRE_DIRECTION'
            }
        });

        if (yamina) {
            console.log('üë§ Compte secr√©taire trouv√©:');
            console.log(`   ID: ${yamina.id}`);
            console.log(`   Nom: ${yamina.firstName} ${yamina.lastName}`);
            console.log(`   Email: ${yamina.email}`);
            console.log(`   R√¥le: ${yamina.role}`);
            console.log(`   Mot de pass: ${yamina.password ? 'D√©fini ‚úÖ' : 'Non d√©fini ‚ùå'}`);
            console.log(`   Cr√©√© le: ${yamina.createdAt.toLocaleString('fr-FR')}`);
        } else {
            console.log('‚ùå Aucun compte SECRETAIRE_DIRECTION trouv√©');

            // Chercher par email
            const yaminaByEmail = await prisma.user.findFirst({
                where: {
                    email: 'ecole-saint-mathieu@wanadoo.fr'
                }
            });

            if (yaminaByEmail) {
                console.log('üìß Compte trouv√© par email:');
                console.log(`   Nom: ${yaminaByEmail.firstName} ${yaminaByEmail.lastName}`);
                console.log(`   Email: ${yaminaByEmail.email}`);
                console.log(`   R√¥le: ${yaminaByEmail.role}`);
                console.log(`   ‚ö†Ô∏è PROBL√àME: Le r√¥le devrait √™tre SECRETAIRE_DIRECTION`);
            }
        }

        // 2. Lister tous les utilisateurs avec leurs r√¥les
        console.log('\nüìä Tous les utilisateurs:');
        const users = await prisma.user.findMany({
            select: {
                id: true,
                firstName: true,
                lastName: true,
                email: true,
                role: true
            },
            orderBy: {
                role: 'asc'
            }
        });

        users.forEach(user => {
            console.log(`   ${user.id}. ${user.firstName} ${user.lastName} (${user.email}) - ${user.role}`);
        });

        // 3. URLs recommand√©es
        console.log('\nüåê URLs √† tester:');
        console.log('   Dashboard secr√©taire: http://localhost:3007/secretaire/dashboard');
        console.log('   Login: http://localhost:3007/auth/login');
        console.log('   Dashboard directeur: http://localhost:3007/directeur/dashboard');

        // 4. Informations de connexion
        console.log('\nüîë Informations de connexion Yamina:');
        if (yamina) {
            console.log(`   Email: ${yamina.email}`);
            console.log('   Mot de passe: (Le mot de passe d√©fini lors de la cr√©ation)');
        } else {
            console.log('   ‚ùå Compte non trouv√© - il faut le cr√©er');
        }

    } catch (error) {
        console.error('‚ùå Erreur lors du diagnostic:', error);
    } finally {
        await prisma.$disconnect();
    }
}

diagnoseDashboardIssue().catch(console.error);