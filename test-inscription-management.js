const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function testInscriptionManagement() {
    try {
        console.log('üîç Test du contr√¥leur inscription management...');

        // Test 1: V√©rifier la configuration
        console.log('\n1Ô∏è‚É£ Test configuration...');
        let config = await prisma.inscriptionConfiguration.findFirst();
        if (!config) {
            console.log('‚ö†Ô∏è Aucune configuration trouv√©e, cr√©ation...');
            config = await prisma.inscriptionConfiguration.create({
                data: {
                    soustitre: "Demande d'identifiants pour acc√©der √† l'espace familles",
                    afficherAnnoncePS2026: false
                }
            });
            console.log('‚úÖ Configuration cr√©√©e');
        } else {
            console.log('‚úÖ Configuration trouv√©e:', config.soustitre);
        }

        // Test 2: V√©rifier les documents
        console.log('\n2Ô∏è‚É£ Test documents...');
        const documents = await prisma.inscriptionDocument.findMany({
            where: { actif: true },
            take: 5
        });
        console.log('‚úÖ Documents trouv√©s:', documents.length);

        console.log('\nüéâ Test r√©ussi ! Le contr√¥leur devrait fonctionner.');

    } catch (error) {
        console.error('‚ùå Erreur d√©tect√©e:', error.message);
        console.error('üìç D√©tails:', error);
    } finally {
        await prisma.$disconnect();
    }
}

testInscriptionManagement();
