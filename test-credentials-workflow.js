// Script pour cr√©er une nouvelle demande d'identifiants via HTTP
const fetch = require('node-fetch').default || require('node-fetch');

async function createCredentialsRequest() {
    try {
        console.log('üîë Test de cr√©ation d\'une demande d\'identifiants...');

        const formData = new URLSearchParams({
            firstName: 'Jean',
            lastName: 'Dupont',
            email: 'jean.dupont@email.com',
            phone: '06.11.22.33.44',
            childFirstName: 'Paul',
            childLastName: 'Dupont',
            childBirthDate: '2015-05-20',
            relationship: 'P√®re'
        });

        const response = await fetch('http://localhost:3007/credentials-request', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: formData
        });

        if (response.ok) {
            console.log('‚úÖ Demande cr√©√©e avec succ√®s !');
            console.log('Status:', response.status);

            // V√©rifier que la demande a √©t√© enregistr√©e
            const { PrismaClient } = require('@prisma/client');
            const prisma = new PrismaClient();

            const newRequest = await prisma.credentialsRequest.findFirst({
                where: { requestedEmail: 'jean.dupont@email.com' },
                orderBy: { createdAt: 'desc' }
            });

            if (newRequest) {
                console.log('‚úÖ Demande trouv√©e en base:');
                console.log(`- Nom: ${newRequest.requestedFirstName} ${newRequest.requestedLastName}`);
                console.log(`- Email: ${newRequest.requestedEmail}`);
                console.log(`- Statut: ${newRequest.status}`);
                console.log(`- Cr√©√©e le: ${newRequest.createdAt}`);
            } else {
                console.log('‚ùå Demande non trouv√©e en base');
            }

            await prisma.$disconnect();

        } else {
            console.log('‚ùå Erreur:', response.status, response.statusText);
            const text = await response.text();
            console.log('R√©ponse:', text);
        }

    } catch (error) {
        console.error('‚ùå Erreur lors de la cr√©ation de la demande:', error);
    }
}

createCredentialsRequest();
