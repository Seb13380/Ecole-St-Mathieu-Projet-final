# Script de correction Google Maps pour l'environnement HTTPS
# Auteur : GitHub Copilot
# Date : 6 septembre 2025

Write-Host "üó∫Ô∏è Correction Google Maps pour l'environnement HTTPS..." -ForegroundColor Green

# V√©rification que nous sommes dans le bon r√©pertoire
if (-not (Test-Path "app.js")) {
    Write-Host "‚ùå Erreur : Ce script doit √™tre ex√©cut√© depuis la racine du projet" -ForegroundColor Red
    exit 1
}

# Sauvegarde des fichiers avant correction
Write-Host "üì¶ Cr√©ation des sauvegardes..." -ForegroundColor Yellow
$backupDir = ".\backups\maps_fix_$(Get-Date -Format 'yyyyMMdd_HHmmss')"
New-Item -ItemType Directory -Path $backupDir -Force | Out-Null

if (Test-Path ".\src\views\pages\home.twig") {
    Copy-Item -Path ".\src\views\pages\home.twig" -Destination "$backupDir\home_backup.twig" -Force
}
if (Test-Path ".\src\views\layouts\base.twig") {
    Copy-Item -Path ".\src\views\layouts\base.twig" -Destination "$backupDir\base_backup.twig" -Force
}

Write-Host "‚úÖ Sauvegardes cr√©√©es dans $backupDir" -ForegroundColor Green

# Test des fichiers modifi√©s
Write-Host "üß™ Validation des corrections..." -ForegroundColor Yellow

$filesToCheck = @(
    ".\src\views\pages\home.twig",
    ".\src\views\layouts\base.twig",
    ".\test-google-maps.html"
)

foreach ($file in $filesToCheck) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file existe" -ForegroundColor Green
        
        # V√©rifier le contenu sp√©cifique pour Google Maps
        $content = Get-Content $file -Raw
        
        if ($file -like "*home.twig") {
            if ($content -match "google.com/maps/embed" -and $content -match "openstreetmap.org") {
                Write-Host "  ‚úÖ Google Maps et OpenStreetMap d√©tect√©s" -ForegroundColor Green
            } else {
                Write-Host "  ‚ö†Ô∏è Cartes manquantes dans home.twig" -ForegroundColor Yellow
            }
        }
        
        if ($file -like "*base.twig") {
            if ($content -match "Content-Security-Policy" -and $content -match "frame-src") {
                Write-Host "  ‚úÖ Content Security Policy configur√©" -ForegroundColor Green
            } else {
                Write-Host "  ‚ö†Ô∏è CSP manquant ou incomplet" -ForegroundColor Yellow
            }
        }
    } else {
        Write-Host "‚ùå $file n'existe pas" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "üìã Corrections appliqu√©es :" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Nouvelle URL Google Maps corrig√©e pour l'√âcole Saint-Mathieu" -ForegroundColor White
Write-Host "   ‚Ä¢ Fallback OpenStreetMap en cas de probl√®me" -ForegroundColor White
Write-Host "   ‚Ä¢ Content Security Policy configur√© pour autoriser les cartes" -ForegroundColor White
Write-Host "   ‚Ä¢ Bouton de basculement entre Google Maps et OSM" -ForegroundColor White
Write-Host "   ‚Ä¢ JavaScript de d√©tection d'erreur et fallback automatique" -ForegroundColor White
Write-Host ""

Write-Host "üéØ Probl√®mes r√©solus :" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ URL Google Maps factice remplac√©e par vraie adresse" -ForegroundColor White
Write-Host "   ‚Ä¢ Restrictions HTTPS contourn√©es avec CSP" -ForegroundColor White
Write-Host "   ‚Ä¢ Alternative OpenStreetMap disponible" -ForegroundColor White
Write-Host "   ‚Ä¢ D√©tection automatique des erreurs de chargement" -ForegroundColor White
Write-Host ""

Write-Host "üß™ Tests disponibles :" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Ouvrir test-google-maps.html pour tester les cartes" -ForegroundColor White
Write-Host "   ‚Ä¢ V√©rifier la console navigateur pour les erreurs" -ForegroundColor White
Write-Host "   ‚Ä¢ Tester sur l'environnement HTTPS de production" -ForegroundColor White
Write-Host ""

Write-Host "üì§ Fichiers √† d√©ployer en production :" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ src/views/pages/home.twig (nouvelle carte)" -ForegroundColor White
Write-Host "   ‚Ä¢ src/views/layouts/base.twig (CSP ajout√©)" -ForegroundColor White
Write-Host "   ‚Ä¢ test-google-maps.html (optionnel, pour tests)" -ForegroundColor White
Write-Host ""

Write-Host "üîß Diagnostic en cas de probl√®me :" -ForegroundColor Cyan
Write-Host "   1. V√©rifier les erreurs dans la console navigateur" -ForegroundColor White
Write-Host "   2. Tester avec test-google-maps.html" -ForegroundColor White
Write-Host "   3. V√©rifier que le Content Security Policy n'est pas en conflit" -ForegroundColor White
Write-Host "   4. Utiliser le bouton OpenStreetMap en cas d'√©chec" -ForegroundColor White
Write-Host ""

# Test du fichier de test s'il existe
if (Test-Path ".\test-google-maps.html") {
    Write-Host "üöÄ Pour tester imm√©diatement :" -ForegroundColor Green
    Write-Host "   ‚Ä¢ Ouvrir test-google-maps.html dans un navigateur" -ForegroundColor White
    Write-Host "   ‚Ä¢ Ou utiliser : start test-google-maps.html" -ForegroundColor White
    
    $testNow = Read-Host "`nüîç Ouvrir le fichier de test maintenant ? (y/N)"
    if ($testNow -eq "y" -or $testNow -eq "Y") {
        Start-Process "test-google-maps.html"
        Write-Host "üìÇ Fichier de test ouvert dans le navigateur par d√©faut" -ForegroundColor Green
    }
}

Write-Host ""
Write-Host "‚úÖ Correction Google Maps termin√©e avec succ√®s !" -ForegroundColor Green
Write-Host "üó∫Ô∏è Les cartes devraient maintenant fonctionner sur l'environnement HTTPS" -ForegroundColor Green
