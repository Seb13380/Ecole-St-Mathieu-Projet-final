const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcrypt');

const prisma = new PrismaClient();

async function testClassesAccess() {
    try {
        console.log('üîç Test d\'acc√®s aux classes...\n');

        // 1. V√©rifier que les classes existent dans la base
        console.log('üìã V√©rification des classes en base...');
        const classesInDB = await prisma.classe.findMany({
            include: {
                eleves: true,
                _count: {
                    select: {
                        eleves: true
                    }
                }
            },
            orderBy: { nom: 'asc' }
        });

        console.log(`‚úÖ ${classesInDB.length} classes trouv√©es:`);
        classesInDB.forEach(classe => {
            console.log(`   - ${classe.nom} (${classe.niveau}) - ${classe._count.eleves} √©l√®ves`);
        });

        // 2. V√©rifier que Lionel existe et peut se connecter
        console.log('\nüë§ V√©rification du compte Lionel...');
        const lionel = await prisma.user.findUnique({
            where: { email: 'l.camboulives@stmathieu.org' }
        });

        if (lionel) {
            console.log(`‚úÖ Lionel trouv√©: ${lionel.firstName} ${lionel.lastName} (${lionel.role})`);

            // V√©rifier son mot de passe
            const passwordMatch = await bcrypt.compare('Lionel123!', lionel.password);
            console.log(`üîë Mot de passe valide: ${passwordMatch ? '‚úÖ Oui' : '‚ùå Non'}`);

            if (passwordMatch) {
                // 3. Simuler le contr√¥leur directement
                console.log('\nüéØ Simulation du contr√¥leur getClassesManagement...');

                // Simuler une session utilisateur
                const mockSession = {
                    user: {
                        id: lionel.id,
                        firstName: lionel.firstName,
                        lastName: lionel.lastName,
                        email: lionel.email,
                        role: lionel.role
                    }
                };

                // V√©rifier les permissions
                const hasAccess = ['DIRECTION', 'ADMIN', 'GESTIONNAIRE_SITE'].includes(mockSession.user.role);
                console.log(`üîê Permissions d'acc√®s: ${hasAccess ? '‚úÖ Autoris√©' : '‚ùå Refus√©'}`);

                if (hasAccess) {
                    console.log('üìä Donn√©es qui seraient pass√©es au template:');
                    console.log(`   - Nombre de classes: ${classesInDB.length}`);
                    console.log(`   - Titre: "Gestion des classes"`);
                    console.log(`   - Utilisateur: ${mockSession.user.firstName} ${mockSession.user.lastName}`);

                    // Simuler le rendu du template
                    if (classesInDB.length > 0) {
                        console.log('\nüé® Le template devrait afficher:');
                        console.log('   ‚úÖ Les statistiques en haut');
                        console.log('   ‚úÖ La liste des classes');
                        console.log('   ‚úÖ Les boutons d\'action');
                    } else {
                        console.log('\nüé® Le template devrait afficher:');
                        console.log('   ‚ö†Ô∏è  Message "Aucune classe cr√©√©e"');
                        console.log('   ‚ö†Ô∏è  Bouton "Cr√©er ma premi√®re classe"');
                    }
                }
            }
        } else {
            console.log('‚ùå Lionel non trouv√© en base de donn√©es');
        }

        // 4. Test de la route sp√©cifique
        console.log('\nüåê Pour tester la route compl√®te:');
        console.log('1. D√©marrez le serveur: npm start');
        console.log('2. Ouvrez: http://localhost:3007/auth/login');
        console.log('3. Connectez-vous avec: l.camboulives@stmathieu.org / Lionel123!');
        console.log('4. Acc√©dez √†: http://localhost:3007/directeur/classes');

    } catch (error) {
        console.error('‚ùå Erreur lors du test:', error);
    } finally {
        await prisma.$disconnect();
    }
}

testClassesAccess();
